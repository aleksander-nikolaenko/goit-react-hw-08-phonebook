{"version":3,"file":"static/js/contacts-page.6cf8367c.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/LoaderButton/LoaderButton.module.css?55b0","components/LoaderButton/LoaderButton.jsx","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactsList/ContactsItem/ContactsItem.module.css?5f2a","components/ContactsList/ContactsItem/ContactsItem.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactsList/ContactsList.module.css?d8e9","components/ContactsList/ContactsList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Container/Container.module.css?9f71","components/Container/Container.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.jsx","../node_modules/@mui/icons-material/ImportContacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"LoaderButton_wrapper__WcgzK\"};","import { Oval } from 'react-loader-spinner';\n\nimport styles from './LoaderButton.module.css';\n\nexport const LoaderButton = () => {\n  return (\n    <div className={styles.wrapper}>\n      <Oval\n        ariaLabel=\"loading-indicator\"\n        height={24}\n        width={24}\n        strokeWidth={8}\n        color=\"white\"\n        secondaryColor=\"white\"\n      />\n    </div>\n  );\n};\n","import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport ImportContactsIcon from '@mui/icons-material/ImportContacts';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Tooltip from '@mui/material/Tooltip';\n\nimport { useState } from 'react';\n// import { nanoid } from 'nanoid';\nimport { toast } from 'react-toastify';\nimport selectors from 'redux/selectors';\nimport { addContact } from 'redux/operations/operations-contacts';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LoaderButton } from 'components/LoaderButton';\n\n// import styles from './ContactForm.module.css';\n\nconst { getContacts, getContactsStatus } = selectors;\n\nconst NAME_REGEX = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\nconst NUMBER_REGEX =\n  /^\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}$/;\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const isCreating = useSelector(getContactsStatus) === 'creating';\n  const [values, setValues] = useState({\n    name: '',\n    number: '',\n  });\n  const [errors, setErrors] = useState({\n    name: '',\n    number: '',\n  });\n\n  // const nameInputId = nanoid();\n  // const numberInputId = nanoid();\n\n  const reset = () => {\n    setValues({\n      name: '',\n      number: '',\n    });\n  };\n  const validationField = (name, value, regex) => {\n    if (value.match(regex)) {\n      setValues({\n        ...values,\n        [name]: value,\n      });\n      setErrors({\n        ...errors,\n        [name]: '',\n      });\n      return true;\n    } else {\n      if (value) {\n        setValues({\n          ...values,\n          [name]: value,\n        });\n        setErrors({\n          ...errors,\n          [name]: `wrong ${name}`,\n        });\n        return false;\n      } else {\n        setValues({\n          ...values,\n          [name]: value,\n        });\n        setErrors({\n          ...errors,\n          [name]: `${name} is required`,\n        });\n        return false;\n      }\n    }\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        validationField(name, value, NAME_REGEX);\n        // setName(value);\n        break;\n      case 'number':\n        validationField(name, value, NUMBER_REGEX);\n        // setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const hasName = contacts.find(contact => contact.name === values.name);\n    const hasNumber = contacts.find(\n      contact => contact.number === values.number\n    );\n    if (hasName) {\n      toast.warn(`Name is already in contacts.`);\n      return;\n    }\n    if (hasNumber) {\n      toast.warn(`Number is already in contacts.`);\n      return;\n    }\n    const contact = {\n      name: values.name,\n      number: values.number,\n    };\n    dispatch(addContact(contact))\n      .unwrap()\n      .then(res => {\n        toast.success(`${res.name} is add in contacts.`);\n        reset();\n      })\n      .catch(() => {\n        toast.error(`${values.name} isn't add in contacts.`);\n      });\n  };\n  return (\n    <>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <Box\n          sx={{\n            marginTop: 3,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <ImportContactsIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Contacts\n          </Typography>\n          <Box\n            component=\"form\"\n            onSubmit={handleSubmit}\n            noValidate\n            sx={{ my: 3 }}\n          >\n            <Tooltip title=\"Name may contain only letters, apostrophe, dash and spaces\">\n              <TextField\n                margin=\"normal\"\n                error={!!errors.name}\n                helperText={errors.name}\n                required\n                fullWidth\n                id=\"name\"\n                name=\"name\"\n                value={values.name}\n                label=\"Name\"\n                autoComplete=\"name\"\n                onChange={handleChange}\n              />\n            </Tooltip>\n            <Tooltip title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\">\n              <TextField\n                margin=\"normal\"\n                error={!!errors.number}\n                helperText={errors.number}\n                required\n                fullWidth\n                id=\"number\"\n                name=\"number\"\n                value={values.number}\n                type=\"tel\"\n                label=\"Number\"\n                autoComplete=\"current-password\"\n                onChange={handleChange}\n              />\n            </Tooltip>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              {isCreating && <LoaderButton />}\n              Add Contact\n            </Button>\n          </Box>\n        </Box>\n      </Container>\n      {/* <form onSubmit={handleSubmit} className={styles.form}>\n        <label htmlFor={nameInputId} className={styles.label}>\n          <p className={styles.text}>Name</p>\n          <input\n            className={styles.input}\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Petr Petrov\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            value={name}\n            onChange={handleChange}\n            required={true}\n          />\n        </label>\n        <label htmlFor={numberInputId} className={styles.label}>\n          <p className={styles.text}>Number</p>\n          <input\n            className={styles.input}\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"+38-033-333-33-33\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            value={number}\n            onChange={handleChange}\n            required={true}\n          />\n        </label>\n\n        <button type=\"submit\" className={styles.button}>\n          {isCreating && <LoaderButton />}\n          Add contact\n        </button>\n      </form> */}\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactsItem_item__teaw-\",\"text\":\"ContactsItem_text__llkOD\",\"number\":\"ContactsItem_number__CBgn+\",\"button\":\"ContactsItem_button__S+pxM\",\"wrapper\":\"ContactsItem_wrapper__6gZUn\"};","import PropTypes from 'prop-types';\nimport styles from './ContactsItem.module.css';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/operations/operations-contacts';\nimport { useSelector } from 'react-redux';\nimport { LoaderButton } from 'components/LoaderButton';\nimport { useState } from 'react';\nimport selectors from 'redux/selectors';\nimport { toast } from 'react-toastify';\n\nconst { getContactsStatus } = selectors;\n\nexport const ContactsItem = props => {\n  const { id, name, number } = props;\n  const dispatch = useDispatch();\n  const deleting = useSelector(getContactsStatus) === 'deleting';\n  const [isDeleting, setDeleting] = useState(deleting);\n  const handleDeleteContact = async id => {\n    setDeleting(true);\n    dispatch(deleteContact(id))\n      .unwrap()\n      .then(res => {\n        toast.success(`Contact \"${res.name}\" is deleting`);\n      })\n      .catch(error => {\n        setDeleting(false);\n        console.log(error.message);\n        toast.error(`Contact \"${name}\" is not deleting`);\n      });\n  };\n  return (\n    <li className={styles.item}>\n      <button\n        className={styles.button}\n        type=\"Submit\"\n        onClick={() => handleDeleteContact(id)}\n      >\n        {isDeleting ? <LoaderButton /> : <span>&#128503;</span>}\n      </button>\n      <div className={styles.wrapper}>\n        <p className={styles.text}>&#128447;&nbsp;&nbsp;{name}</p>\n        <p className={styles.number}>&#9742;&nbsp;&nbsp;{number}</p>\n      </div>\n    </li>\n  );\n};\n\nContactsItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactsList_list__mmE3Y\"};","import { ContactsItem } from './ContactsItem';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/operations/operations-contacts';\nimport selectors from 'redux/selectors';\nimport LoaderPage from 'components/LoaderPage';\nimport { toast } from 'react-toastify';\n\nimport styles from './ContactsList.module.css';\n\nconst { getContactsStatus, getFilteredContacts } = selectors;\n\nexport const ContactsList = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts())\n      .unwrap()\n      .then(() => {\n        toast.success(`Contacts updated`);\n      })\n      .catch(() => {\n        toast.error(`Contacts didn't updated`);\n      });\n  }, [dispatch]);\n  const contacts = useSelector(getFilteredContacts);\n  const ContactsStatus = useSelector(getContactsStatus);\n  const isLoading = ContactsStatus === 'loading';\n  return (\n    <>\n      {isLoading && <LoaderPage />}\n      <ul className={styles.list}>\n        {contacts.map(({ id, name, number }) => (\n          <ContactsItem key={id} name={name} number={number} id={id} />\n        ))}\n      </ul>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__VVOCq\"};","import PropTypes from 'prop-types';\nimport styles from './Container.module.css';\n\nexport const Container = ({ children }) => {\n  return <div className={styles.container}>{children}</div>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\",\"text\":\"Filter_text__uqQRu\"};","import styles from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilterValue } from 'redux/slice/slice-contacts';\nimport selectors from 'redux/selectors';\n\nconst { getFilterValue } = selectors;\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const value = useSelector(getFilterValue);\n  const handleFilterValue = event => {\n    dispatch(setFilterValue(event.target.value));\n  };\n\n  return (\n    <label className={styles.label}>\n      <p className={styles.text}>Find contacts by name</p>\n      <input\n        className={styles.input}\n        type=\"text\"\n        value={value}\n        onChange={handleFilterValue}\n      />\n    </label>\n  );\n};\n","import { ContactForm } from 'components/ContactForm';\nimport { ContactsList } from 'components/ContactsList';\nimport { Container } from 'components/Container';\nimport { Filter } from 'components/Filter';\n\nconst ContactsPage = () => {\n  return (\n    <main>\n      <Container>\n        {/* <h1>Phonebook</h1> */}\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactsList />\n      </Container>\n    </main>\n  );\n};\n\nexport default ContactsPage;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17.5 4.5c-1.95 0-4.05.4-5.5 1.5-1.45-1.1-3.55-1.5-5.5-1.5S2.45 4.9 1 6v14.65c0 .65.73.45.75.45C3.1 20.45 5.05 20 6.5 20c1.95 0 4.05.4 5.5 1.5 1.35-.85 3.8-1.5 5.5-1.5 1.65 0 3.35.3 4.75 1.05.41.21.75-.19.75-.45V6c-1.49-1.12-3.63-1.5-5.5-1.5zm3.5 14c-1.1-.35-2.3-.5-3.5-.5-1.7 0-4.15.65-5.5 1.5V8c1.35-.85 3.8-1.5 5.5-1.5 1.2 0 2.4.15 3.5.5v11.5z\"\n}), 'ImportContacts');\n\nexports.default = _default;"],"names":["LoaderButton","className","styles","ariaLabel","height","width","strokeWidth","color","secondaryColor","getContacts","selectors","getContactsStatus","NAME_REGEX","NUMBER_REGEX","ContactForm","dispatch","useDispatch","contacts","useSelector","isCreating","useState","name","number","values","setValues","errors","setErrors","validationField","value","regex","match","handleChange","event","currentTarget","Container","component","maxWidth","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","ImportContacts","Typography","variant","onSubmit","preventDefault","hasName","find","contact","hasNumber","toast","addContact","unwrap","then","res","catch","noValidate","my","Tooltip","title","TextField","margin","error","helperText","required","fullWidth","id","label","autoComplete","onChange","type","Button","mt","mb","ContactsItem","props","deleting","isDeleting","setDeleting","handleDeleteContact","deleteContact","console","log","message","onClick","getFilteredContacts","ContactsList","useEffect","fetchContacts","isLoading","LoaderPage","map","children","getFilterValue","Filter","setFilterValue","target","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}